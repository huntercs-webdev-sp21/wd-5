{"version":3,"sources":["ZipCard.jsx","ZipCode.jsx","CitySearch.jsx","reportWebVitals.js","index.js"],"names":["ZipCard","className","this","props","city","state","latitude","longitude","population","wages","Component","ZipCode","handleSubmit","event","preventDefault","axios","get","zip","then","response","newData","data","setState","catch","err","console","log","handleChange","target","value","onSubmit","type","name","onChange","length","map","City","State","Lat","Long","EstimatedPopulation","TotalWages","RecordNumber","CitySearch","toUpperCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","router","basename","exact","path","component","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c104696.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nclass ZipCard extends Component {\n\n    render() {\n        return(\n            <div className=\"zip-card\">\n                <ul>\n                    <h3> {this.props.city}, {this.props.state}</h3>\n                    <li> State: {this.props.state} </li>\n                    <li> Location: ({this.props.latitude}, {this.props.longitude}) </li>\n                    <li> Population (estimated): {this.props.population} </li>\n                    <li> Total Wages: {this.props.wages} </li>\n                </ul>\n            </div>\n        );\n    }\n};\n\nexport default ZipCard;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport ZipCard from './ZipCard.jsx';\n\nclass ZipCode extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zip: '',\n      data: [],\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    axios.get(`https://ctp-zip-api.herokuapp.com/zip/${this.state.zip}`)\n      .then(response => {\n        const newData = response.data;\n        this.setState({ data: newData });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ data: [] });\n      });\n  }\n\n  handleChange = (event) => {\n    this.setState({ zip: event.target.value });\n  }\n\n\n  render() {\n    return (\n      <div className=\"centered\">\n        <form onSubmit={this.handleSubmit}>\n          Enter a Zip Code\n          <br />\n          <input\n            type=\"text\" name=\"zip\"\n            onChange={this.handleChange} />\n          <input type=\"submit\" value=\"Submit\" />\n\n        </form>\n        <div className=\"container\">\n          {this.state.data.length == 0\n            ? \"No Results\"\n            : this.state.data.map(data =>\n              <div key={data.RecordNumber} className=\"card\">\n                <ZipCard city={data.City} state={data.State}\n                  latitude={data.Lat} longitude={data.Long}\n                  population={data.EstimatedPopulation} wages={data.TotalWages} />\n              </div>)\n          }\n        </div>\n\n      </div>\n    );\n  }\n};\n\n\nexport default ZipCode;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass CitySearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: '',\n      data: [],\n    };\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    axios.get(`https://ctp-zip-api.herokuapp.com/city/${this.state.city.toUpperCase()}`)\n      .then(response => {\n        const newData = response.data;\n        this.setState({ data: newData });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ data: [] });\n      });\n  }\n\n  handleChange = (event) => {\n    this.setState({ city: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"centered\">\n        <form onSubmit={this.handleSubmit}>\n          Enter a City name\n          <br />\n          <input\n            type=\"text\" name=\"city\"\n            onChange={this.handleChange} />\n          <input type=\"submit\" value=\"Submit\" />\n\n        </form>\n        <div className=\"container\">\n          {this.state.data.length == 0\n            ? \"No Results\"\n            : this.state.data.map(zip => <div className=\"card\">{zip}</div>)\n          }\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default CitySearch;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ZipCode from './ZipCode';\nimport CitySearch from './CitySearch';\nimport reportWebVitals from './reportWebVitals';\nimport { Route, BrowserRouter, Switch, Redirect } from 'react-router-dom';\n\nconst router = (\n  <BrowserRouter basename=\"/wd-5\">\n    <Switch>\n      <Route exact path=\"/zipsearch\" component={ZipCode} />\n      <Route exact path=\"/citysearch\" component={CitySearch} />\n      <Route path=\"/*\" component={() => <Redirect to=\"/zipsearch\" />} />\n    </Switch>\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}